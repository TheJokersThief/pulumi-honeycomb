// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package honeycomb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/thejokersthief/pulumi-honeycomb/sdk/go/honeycomb/internal"
)

// ## # Data Source: GetSLO
//
// The `GetSLO` data source retrieves the details of a single SLO for a dataset.
// If you want to retreive multiple SLOs, use the `GetSLOs` data source instead.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/thejokersthief/pulumi-honeycomb/sdk/go/honeycomb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			dataset := cfg.Require("dataset")
//			_, err := honeycomb.GetSLO(ctx, &honeycomb.GetSLOArgs{
//				Dataset: dataset,
//				Id:      "fS4WfA82ACt",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSLO(ctx *pulumi.Context, args *GetSLOArgs, opts ...pulumi.InvokeOption) (*GetSLOResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSLOResult
	err := ctx.Invoke("honeycomb:index/getSLO:GetSLO", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetSLO.
type GetSLOArgs struct {
	// The dataset this SLO is associated with
	Dataset string `pulumi:"dataset"`
	// The ID of the SLO
	Id string `pulumi:"id"`
}

// A collection of values returned by GetSLO.
type GetSLOResult struct {
	Dataset string `pulumi:"dataset"`
	// the SLO's description.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// the name of the SLO.
	Name string `pulumi:"name"`
	// the alias of the Derived Column used as the SLO's SLI.
	Sli string `pulumi:"sli"`
	// the percentage of qualified events expected to succeed during the `timePeriod`.
	TargetPercentage float64 `pulumi:"targetPercentage"`
	// The time period, in days, over which the SLO is evaluated.
	TimePeriod int `pulumi:"timePeriod"`
}

func GetSLOOutput(ctx *pulumi.Context, args GetSLOOutputArgs, opts ...pulumi.InvokeOption) GetSLOResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSLOResult, error) {
			args := v.(GetSLOArgs)
			r, err := GetSLO(ctx, &args, opts...)
			var s GetSLOResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSLOResultOutput)
}

// A collection of arguments for invoking GetSLO.
type GetSLOOutputArgs struct {
	// The dataset this SLO is associated with
	Dataset pulumi.StringInput `pulumi:"dataset"`
	// The ID of the SLO
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSLOOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSLOArgs)(nil)).Elem()
}

// A collection of values returned by GetSLO.
type GetSLOResultOutput struct{ *pulumi.OutputState }

func (GetSLOResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSLOResult)(nil)).Elem()
}

func (o GetSLOResultOutput) ToGetSLOResultOutput() GetSLOResultOutput {
	return o
}

func (o GetSLOResultOutput) ToGetSLOResultOutputWithContext(ctx context.Context) GetSLOResultOutput {
	return o
}

func (o GetSLOResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v GetSLOResult) string { return v.Dataset }).(pulumi.StringOutput)
}

// the SLO's description.
func (o GetSLOResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSLOResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSLOResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSLOResult) string { return v.Id }).(pulumi.StringOutput)
}

// the name of the SLO.
func (o GetSLOResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSLOResult) string { return v.Name }).(pulumi.StringOutput)
}

// the alias of the Derived Column used as the SLO's SLI.
func (o GetSLOResultOutput) Sli() pulumi.StringOutput {
	return o.ApplyT(func(v GetSLOResult) string { return v.Sli }).(pulumi.StringOutput)
}

// the percentage of qualified events expected to succeed during the `timePeriod`.
func (o GetSLOResultOutput) TargetPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetSLOResult) float64 { return v.TargetPercentage }).(pulumi.Float64Output)
}

// The time period, in days, over which the SLO is evaluated.
func (o GetSLOResultOutput) TimePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v GetSLOResult) int { return v.TimePeriod }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSLOResultOutput{})
}
