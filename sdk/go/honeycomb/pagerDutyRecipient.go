// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package honeycomb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/thejokersthief/pulumi-honeycomb/sdk/go/honeycomb/internal"
)

// ## # Resource: PagerDutyRecipient
//
// `PagerDutyRecipient` allows you to define and manage a PagerDuty recipient that can be used by Triggers or BurnAlerts notifications.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/thejokersthief/pulumi-honeycomb/sdk/go/honeycomb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := honeycomb.NewPagerDutyRecipient(ctx, "prod-oncall", &honeycomb.PagerDutyRecipientArgs{
//				IntegrationKey:  pulumi.String("cd6e8de3c857aefc950e0d5ebcb79ac2"),
//				IntegrationName: pulumi.String("Production on-call notifications"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// PagerDuty Recipients can be imported by their ID, e.g.
//
// ```sh
// $ pulumi import honeycomb:index/pagerDutyRecipient:PagerDutyRecipient my_recipient nx2zsegA0dZ
// ```
type PagerDutyRecipient struct {
	pulumi.CustomResourceState

	// The key of the PagerDuty Integration to send the notification to.
	IntegrationKey pulumi.StringOutput `pulumi:"integrationKey"`
	// The name of the PagerDuty Integration to send the notification to.
	IntegrationName pulumi.StringOutput `pulumi:"integrationName"`
}

// NewPagerDutyRecipient registers a new resource with the given unique name, arguments, and options.
func NewPagerDutyRecipient(ctx *pulumi.Context,
	name string, args *PagerDutyRecipientArgs, opts ...pulumi.ResourceOption) (*PagerDutyRecipient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IntegrationKey == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationKey'")
	}
	if args.IntegrationName == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationName'")
	}
	if args.IntegrationKey != nil {
		args.IntegrationKey = pulumi.ToSecret(args.IntegrationKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"integrationKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PagerDutyRecipient
	err := ctx.RegisterResource("honeycomb:index/pagerDutyRecipient:PagerDutyRecipient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPagerDutyRecipient gets an existing PagerDutyRecipient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPagerDutyRecipient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PagerDutyRecipientState, opts ...pulumi.ResourceOption) (*PagerDutyRecipient, error) {
	var resource PagerDutyRecipient
	err := ctx.ReadResource("honeycomb:index/pagerDutyRecipient:PagerDutyRecipient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PagerDutyRecipient resources.
type pagerDutyRecipientState struct {
	// The key of the PagerDuty Integration to send the notification to.
	IntegrationKey *string `pulumi:"integrationKey"`
	// The name of the PagerDuty Integration to send the notification to.
	IntegrationName *string `pulumi:"integrationName"`
}

type PagerDutyRecipientState struct {
	// The key of the PagerDuty Integration to send the notification to.
	IntegrationKey pulumi.StringPtrInput
	// The name of the PagerDuty Integration to send the notification to.
	IntegrationName pulumi.StringPtrInput
}

func (PagerDutyRecipientState) ElementType() reflect.Type {
	return reflect.TypeOf((*pagerDutyRecipientState)(nil)).Elem()
}

type pagerDutyRecipientArgs struct {
	// The key of the PagerDuty Integration to send the notification to.
	IntegrationKey string `pulumi:"integrationKey"`
	// The name of the PagerDuty Integration to send the notification to.
	IntegrationName string `pulumi:"integrationName"`
}

// The set of arguments for constructing a PagerDutyRecipient resource.
type PagerDutyRecipientArgs struct {
	// The key of the PagerDuty Integration to send the notification to.
	IntegrationKey pulumi.StringInput
	// The name of the PagerDuty Integration to send the notification to.
	IntegrationName pulumi.StringInput
}

func (PagerDutyRecipientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pagerDutyRecipientArgs)(nil)).Elem()
}

type PagerDutyRecipientInput interface {
	pulumi.Input

	ToPagerDutyRecipientOutput() PagerDutyRecipientOutput
	ToPagerDutyRecipientOutputWithContext(ctx context.Context) PagerDutyRecipientOutput
}

func (*PagerDutyRecipient) ElementType() reflect.Type {
	return reflect.TypeOf((**PagerDutyRecipient)(nil)).Elem()
}

func (i *PagerDutyRecipient) ToPagerDutyRecipientOutput() PagerDutyRecipientOutput {
	return i.ToPagerDutyRecipientOutputWithContext(context.Background())
}

func (i *PagerDutyRecipient) ToPagerDutyRecipientOutputWithContext(ctx context.Context) PagerDutyRecipientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagerDutyRecipientOutput)
}

// PagerDutyRecipientArrayInput is an input type that accepts PagerDutyRecipientArray and PagerDutyRecipientArrayOutput values.
// You can construct a concrete instance of `PagerDutyRecipientArrayInput` via:
//
//	PagerDutyRecipientArray{ PagerDutyRecipientArgs{...} }
type PagerDutyRecipientArrayInput interface {
	pulumi.Input

	ToPagerDutyRecipientArrayOutput() PagerDutyRecipientArrayOutput
	ToPagerDutyRecipientArrayOutputWithContext(context.Context) PagerDutyRecipientArrayOutput
}

type PagerDutyRecipientArray []PagerDutyRecipientInput

func (PagerDutyRecipientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PagerDutyRecipient)(nil)).Elem()
}

func (i PagerDutyRecipientArray) ToPagerDutyRecipientArrayOutput() PagerDutyRecipientArrayOutput {
	return i.ToPagerDutyRecipientArrayOutputWithContext(context.Background())
}

func (i PagerDutyRecipientArray) ToPagerDutyRecipientArrayOutputWithContext(ctx context.Context) PagerDutyRecipientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagerDutyRecipientArrayOutput)
}

// PagerDutyRecipientMapInput is an input type that accepts PagerDutyRecipientMap and PagerDutyRecipientMapOutput values.
// You can construct a concrete instance of `PagerDutyRecipientMapInput` via:
//
//	PagerDutyRecipientMap{ "key": PagerDutyRecipientArgs{...} }
type PagerDutyRecipientMapInput interface {
	pulumi.Input

	ToPagerDutyRecipientMapOutput() PagerDutyRecipientMapOutput
	ToPagerDutyRecipientMapOutputWithContext(context.Context) PagerDutyRecipientMapOutput
}

type PagerDutyRecipientMap map[string]PagerDutyRecipientInput

func (PagerDutyRecipientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PagerDutyRecipient)(nil)).Elem()
}

func (i PagerDutyRecipientMap) ToPagerDutyRecipientMapOutput() PagerDutyRecipientMapOutput {
	return i.ToPagerDutyRecipientMapOutputWithContext(context.Background())
}

func (i PagerDutyRecipientMap) ToPagerDutyRecipientMapOutputWithContext(ctx context.Context) PagerDutyRecipientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagerDutyRecipientMapOutput)
}

type PagerDutyRecipientOutput struct{ *pulumi.OutputState }

func (PagerDutyRecipientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PagerDutyRecipient)(nil)).Elem()
}

func (o PagerDutyRecipientOutput) ToPagerDutyRecipientOutput() PagerDutyRecipientOutput {
	return o
}

func (o PagerDutyRecipientOutput) ToPagerDutyRecipientOutputWithContext(ctx context.Context) PagerDutyRecipientOutput {
	return o
}

// The key of the PagerDuty Integration to send the notification to.
func (o PagerDutyRecipientOutput) IntegrationKey() pulumi.StringOutput {
	return o.ApplyT(func(v *PagerDutyRecipient) pulumi.StringOutput { return v.IntegrationKey }).(pulumi.StringOutput)
}

// The name of the PagerDuty Integration to send the notification to.
func (o PagerDutyRecipientOutput) IntegrationName() pulumi.StringOutput {
	return o.ApplyT(func(v *PagerDutyRecipient) pulumi.StringOutput { return v.IntegrationName }).(pulumi.StringOutput)
}

type PagerDutyRecipientArrayOutput struct{ *pulumi.OutputState }

func (PagerDutyRecipientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PagerDutyRecipient)(nil)).Elem()
}

func (o PagerDutyRecipientArrayOutput) ToPagerDutyRecipientArrayOutput() PagerDutyRecipientArrayOutput {
	return o
}

func (o PagerDutyRecipientArrayOutput) ToPagerDutyRecipientArrayOutputWithContext(ctx context.Context) PagerDutyRecipientArrayOutput {
	return o
}

func (o PagerDutyRecipientArrayOutput) Index(i pulumi.IntInput) PagerDutyRecipientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PagerDutyRecipient {
		return vs[0].([]*PagerDutyRecipient)[vs[1].(int)]
	}).(PagerDutyRecipientOutput)
}

type PagerDutyRecipientMapOutput struct{ *pulumi.OutputState }

func (PagerDutyRecipientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PagerDutyRecipient)(nil)).Elem()
}

func (o PagerDutyRecipientMapOutput) ToPagerDutyRecipientMapOutput() PagerDutyRecipientMapOutput {
	return o
}

func (o PagerDutyRecipientMapOutput) ToPagerDutyRecipientMapOutputWithContext(ctx context.Context) PagerDutyRecipientMapOutput {
	return o
}

func (o PagerDutyRecipientMapOutput) MapIndex(k pulumi.StringInput) PagerDutyRecipientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PagerDutyRecipient {
		return vs[0].(map[string]*PagerDutyRecipient)[vs[1].(string)]
	}).(PagerDutyRecipientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PagerDutyRecipientInput)(nil)).Elem(), &PagerDutyRecipient{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagerDutyRecipientArrayInput)(nil)).Elem(), PagerDutyRecipientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagerDutyRecipientMapInput)(nil)).Elem(), PagerDutyRecipientMap{})
	pulumi.RegisterOutputType(PagerDutyRecipientOutput{})
	pulumi.RegisterOutputType(PagerDutyRecipientArrayOutput{})
	pulumi.RegisterOutputType(PagerDutyRecipientMapOutput{})
}
