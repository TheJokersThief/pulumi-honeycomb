// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package honeycomb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/thejokersthief/pulumi-honeycomb/sdk/go/honeycomb/internal"
)

// ## # Data Source: GetColumns
//
// The columns data source allows the columns of a dataset to be retrieved.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/thejokersthief/pulumi-honeycomb/sdk/go/honeycomb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			dataset := cfg.Require("dataset")
//			_, err := honeycomb.GetColumns(ctx, &honeycomb.GetColumnsArgs{
//				Dataset: dataset,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = honeycomb.GetColumns(ctx, &honeycomb.GetColumnsArgs{
//				Dataset:    dataset,
//				StartsWith: pulumi.StringRef("foo_"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetColumns(ctx *pulumi.Context, args *GetColumnsArgs, opts ...pulumi.InvokeOption) (*GetColumnsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetColumnsResult
	err := ctx.Invoke("honeycomb:index/getColumns:GetColumns", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetColumns.
type GetColumnsArgs struct {
	// The dataset to retrieve the columns list from
	Dataset string `pulumi:"dataset"`
	// Only return columns starting with the given value.
	StartsWith *string `pulumi:"startsWith"`
}

// A collection of values returned by GetColumns.
type GetColumnsResult struct {
	Dataset string `pulumi:"dataset"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// a list of all the column names found in the dataset
	Names      []string `pulumi:"names"`
	StartsWith *string  `pulumi:"startsWith"`
}

func GetColumnsOutput(ctx *pulumi.Context, args GetColumnsOutputArgs, opts ...pulumi.InvokeOption) GetColumnsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetColumnsResult, error) {
			args := v.(GetColumnsArgs)
			r, err := GetColumns(ctx, &args, opts...)
			var s GetColumnsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetColumnsResultOutput)
}

// A collection of arguments for invoking GetColumns.
type GetColumnsOutputArgs struct {
	// The dataset to retrieve the columns list from
	Dataset pulumi.StringInput `pulumi:"dataset"`
	// Only return columns starting with the given value.
	StartsWith pulumi.StringPtrInput `pulumi:"startsWith"`
}

func (GetColumnsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetColumnsArgs)(nil)).Elem()
}

// A collection of values returned by GetColumns.
type GetColumnsResultOutput struct{ *pulumi.OutputState }

func (GetColumnsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetColumnsResult)(nil)).Elem()
}

func (o GetColumnsResultOutput) ToGetColumnsResultOutput() GetColumnsResultOutput {
	return o
}

func (o GetColumnsResultOutput) ToGetColumnsResultOutputWithContext(ctx context.Context) GetColumnsResultOutput {
	return o
}

func (o GetColumnsResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v GetColumnsResult) string { return v.Dataset }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetColumnsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetColumnsResult) string { return v.Id }).(pulumi.StringOutput)
}

// a list of all the column names found in the dataset
func (o GetColumnsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetColumnsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetColumnsResultOutput) StartsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetColumnsResult) *string { return v.StartsWith }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetColumnsResultOutput{})
}
