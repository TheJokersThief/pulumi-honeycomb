// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package honeycomb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/thejokersthief/pulumi-honeycomb/sdk/go/honeycomb/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/thejokersthief/pulumi-honeycomb/sdk/go/honeycomb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			dataset := cfg.Require("dataset")
//			_, err := honeycomb.GetDerivedColumn(ctx, &honeycomb.GetDerivedColumnArgs{
//				Dataset: dataset,
//				Alias:   "mydc",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDerivedColumn(ctx *pulumi.Context, args *GetDerivedColumnArgs, opts ...pulumi.InvokeOption) (*GetDerivedColumnResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDerivedColumnResult
	err := ctx.Invoke("honeycomb:index/getDerivedColumn:GetDerivedColumn", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetDerivedColumn.
type GetDerivedColumnArgs struct {
	// The alias of the column
	Alias string `pulumi:"alias"`
	// The dataset this derived column is associated with. Use `__all__` for Environment-wide derived columns.
	Dataset string `pulumi:"dataset"`
}

// A collection of values returned by GetDerivedColumn.
type GetDerivedColumnResult struct {
	Alias   string `pulumi:"alias"`
	Dataset string `pulumi:"dataset"`
	// the description of the derived column
	Description string `pulumi:"description"`
	// the expression of the derived column
	Expression string `pulumi:"expression"`
	// the ID of the derived column.
	Id string `pulumi:"id"`
}

func GetDerivedColumnOutput(ctx *pulumi.Context, args GetDerivedColumnOutputArgs, opts ...pulumi.InvokeOption) GetDerivedColumnResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDerivedColumnResult, error) {
			args := v.(GetDerivedColumnArgs)
			r, err := GetDerivedColumn(ctx, &args, opts...)
			var s GetDerivedColumnResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDerivedColumnResultOutput)
}

// A collection of arguments for invoking GetDerivedColumn.
type GetDerivedColumnOutputArgs struct {
	// The alias of the column
	Alias pulumi.StringInput `pulumi:"alias"`
	// The dataset this derived column is associated with. Use `__all__` for Environment-wide derived columns.
	Dataset pulumi.StringInput `pulumi:"dataset"`
}

func (GetDerivedColumnOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDerivedColumnArgs)(nil)).Elem()
}

// A collection of values returned by GetDerivedColumn.
type GetDerivedColumnResultOutput struct{ *pulumi.OutputState }

func (GetDerivedColumnResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDerivedColumnResult)(nil)).Elem()
}

func (o GetDerivedColumnResultOutput) ToGetDerivedColumnResultOutput() GetDerivedColumnResultOutput {
	return o
}

func (o GetDerivedColumnResultOutput) ToGetDerivedColumnResultOutputWithContext(ctx context.Context) GetDerivedColumnResultOutput {
	return o
}

func (o GetDerivedColumnResultOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v GetDerivedColumnResult) string { return v.Alias }).(pulumi.StringOutput)
}

func (o GetDerivedColumnResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v GetDerivedColumnResult) string { return v.Dataset }).(pulumi.StringOutput)
}

// the description of the derived column
func (o GetDerivedColumnResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDerivedColumnResult) string { return v.Description }).(pulumi.StringOutput)
}

// the expression of the derived column
func (o GetDerivedColumnResultOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetDerivedColumnResult) string { return v.Expression }).(pulumi.StringOutput)
}

// the ID of the derived column.
func (o GetDerivedColumnResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDerivedColumnResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDerivedColumnResultOutput{})
}
