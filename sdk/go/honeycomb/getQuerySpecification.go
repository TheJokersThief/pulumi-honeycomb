// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package honeycomb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/thejokersthief/pulumi-honeycomb/sdk/go/honeycomb/internal"
)

// ## # Data Source: GetQuerySpecification
//
// Generates a [Query Specification](https://docs.honeycomb.io/api/query-specification/) in JSON format for use with resources that expect a JSON-formatted Query Specification like `Query`.
//
// Using this data source to generate query specifications is optional.
// It is also valid to use literal JSON strings in your configuration or to use the file interpolation function to read a raw JSON query specification from a file.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/thejokersthief/pulumi-honeycomb/sdk/go/honeycomb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := honeycomb.GetQuerySpecification(ctx, &honeycomb.GetQuerySpecificationArgs{
//				Calculations: []honeycomb.GetQuerySpecificationCalculation{
//					{
//						Op:     "AVG",
//						Column: pulumi.StringRef("duration_ms"),
//					},
//				},
//				Filters: []honeycomb.GetQuerySpecificationFilter{
//					{
//						Column: "trace.parent_id",
//						Op:     "does-not-exist",
//					},
//					{
//						Column: "app.tenant",
//						Op:     "=",
//						Value:  pulumi.StringRef("ThatSpecialTenant"),
//					},
//				},
//				FilterCombination: pulumi.StringRef("AND"),
//				Breakdowns: []string{
//					"app.tenant",
//				},
//				TimeRange: pulumi.IntRef(28800),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("jsonQuery", example.Json)
//			return nil
//		})
//	}
//
// ```
func GetQuerySpecification(ctx *pulumi.Context, args *GetQuerySpecificationArgs, opts ...pulumi.InvokeOption) (*GetQuerySpecificationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetQuerySpecificationResult
	err := ctx.Invoke("honeycomb:index/getQuerySpecification:GetQuerySpecification", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetQuerySpecification.
type GetQuerySpecificationArgs struct {
	// A list of fields to group by.
	Breakdowns []string `pulumi:"breakdowns"`
	// Zero or more configuration blocks (described below) with the calculations that should be displayed. If no calculations are specified, `COUNT` will be used.
	Calculations []GetQuerySpecificationCalculation `pulumi:"calculations"`
	// The absolute end time of the query in Unix Time (= seconds since epoch).
	EndTime *int `pulumi:"endTime"`
	// How to combine multiple filters, either `AND` (default) or `OR`.
	FilterCombination *string `pulumi:"filterCombination"`
	// Zero or more configuration blocks (described below) with the filters that should be applied.
	Filters []GetQuerySpecificationFilter `pulumi:"filters"`
	// The time resolution of the query’s graph, in seconds. Valid values must be in between the query’s time range /10 at maximum, and /1000 at minimum.
	//
	// > **NOTE** It is not allowed to specify all three of `timeRange`, `startTime` and `endTime`. For more details about specifying time windows, check [Query specification: A caveat on time](https://docs.honeycomb.io/api/query-specification/#a-caveat-on-time).
	Granularity *int `pulumi:"granularity"`
	// Zero or more filters used to restrict returned groups in the query result.
	Havings []GetQuerySpecificationHaving `pulumi:"havings"`
	// The maximum number of query results, must be between 1 and 1000.
	Limit *int `pulumi:"limit"`
	// Zero or more configuration blocks (described below) describing how to order the query results. Each term must appear in either `calculation` or `breakdowns`.
	Orders []GetQuerySpecificationOrder `pulumi:"orders"`
	// The absolute start time of the query in Unix Time (= seconds since epoch).
	StartTime *int `pulumi:"startTime"`
	// The time range of the query in seconds, defaults to `7200` (two hours).
	TimeRange *int `pulumi:"timeRange"`
}

// A collection of values returned by GetQuerySpecification.
type GetQuerySpecificationResult struct {
	Breakdowns        []string                           `pulumi:"breakdowns"`
	Calculations      []GetQuerySpecificationCalculation `pulumi:"calculations"`
	EndTime           *int                               `pulumi:"endTime"`
	FilterCombination *string                            `pulumi:"filterCombination"`
	Filters           []GetQuerySpecificationFilter      `pulumi:"filters"`
	Granularity       *int                               `pulumi:"granularity"`
	Havings           []GetQuerySpecificationHaving      `pulumi:"havings"`
	// ID of the query specification.
	//
	// Deprecated: The `id` attribute is deprecated and included for compatibility with the Terraform Plugin SDK. It will be removed in a future version.
	Id string `pulumi:"id"`
	// JSON representation of the query according to the [Query Specification](https://docs.honeycomb.io/api/query-specification/#fields-on-a-query-specification), can be used as input for other resources.
	Json      string                       `pulumi:"json"`
	Limit     *int                         `pulumi:"limit"`
	Orders    []GetQuerySpecificationOrder `pulumi:"orders"`
	StartTime *int                         `pulumi:"startTime"`
	TimeRange *int                         `pulumi:"timeRange"`
}

func GetQuerySpecificationOutput(ctx *pulumi.Context, args GetQuerySpecificationOutputArgs, opts ...pulumi.InvokeOption) GetQuerySpecificationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetQuerySpecificationResult, error) {
			args := v.(GetQuerySpecificationArgs)
			r, err := GetQuerySpecification(ctx, &args, opts...)
			var s GetQuerySpecificationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetQuerySpecificationResultOutput)
}

// A collection of arguments for invoking GetQuerySpecification.
type GetQuerySpecificationOutputArgs struct {
	// A list of fields to group by.
	Breakdowns pulumi.StringArrayInput `pulumi:"breakdowns"`
	// Zero or more configuration blocks (described below) with the calculations that should be displayed. If no calculations are specified, `COUNT` will be used.
	Calculations GetQuerySpecificationCalculationArrayInput `pulumi:"calculations"`
	// The absolute end time of the query in Unix Time (= seconds since epoch).
	EndTime pulumi.IntPtrInput `pulumi:"endTime"`
	// How to combine multiple filters, either `AND` (default) or `OR`.
	FilterCombination pulumi.StringPtrInput `pulumi:"filterCombination"`
	// Zero or more configuration blocks (described below) with the filters that should be applied.
	Filters GetQuerySpecificationFilterArrayInput `pulumi:"filters"`
	// The time resolution of the query’s graph, in seconds. Valid values must be in between the query’s time range /10 at maximum, and /1000 at minimum.
	//
	// > **NOTE** It is not allowed to specify all three of `timeRange`, `startTime` and `endTime`. For more details about specifying time windows, check [Query specification: A caveat on time](https://docs.honeycomb.io/api/query-specification/#a-caveat-on-time).
	Granularity pulumi.IntPtrInput `pulumi:"granularity"`
	// Zero or more filters used to restrict returned groups in the query result.
	Havings GetQuerySpecificationHavingArrayInput `pulumi:"havings"`
	// The maximum number of query results, must be between 1 and 1000.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Zero or more configuration blocks (described below) describing how to order the query results. Each term must appear in either `calculation` or `breakdowns`.
	Orders GetQuerySpecificationOrderArrayInput `pulumi:"orders"`
	// The absolute start time of the query in Unix Time (= seconds since epoch).
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// The time range of the query in seconds, defaults to `7200` (two hours).
	TimeRange pulumi.IntPtrInput `pulumi:"timeRange"`
}

func (GetQuerySpecificationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuerySpecificationArgs)(nil)).Elem()
}

// A collection of values returned by GetQuerySpecification.
type GetQuerySpecificationResultOutput struct{ *pulumi.OutputState }

func (GetQuerySpecificationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuerySpecificationResult)(nil)).Elem()
}

func (o GetQuerySpecificationResultOutput) ToGetQuerySpecificationResultOutput() GetQuerySpecificationResultOutput {
	return o
}

func (o GetQuerySpecificationResultOutput) ToGetQuerySpecificationResultOutputWithContext(ctx context.Context) GetQuerySpecificationResultOutput {
	return o
}

func (o GetQuerySpecificationResultOutput) Breakdowns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) []string { return v.Breakdowns }).(pulumi.StringArrayOutput)
}

func (o GetQuerySpecificationResultOutput) Calculations() GetQuerySpecificationCalculationArrayOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) []GetQuerySpecificationCalculation { return v.Calculations }).(GetQuerySpecificationCalculationArrayOutput)
}

func (o GetQuerySpecificationResultOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

func (o GetQuerySpecificationResultOutput) FilterCombination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) *string { return v.FilterCombination }).(pulumi.StringPtrOutput)
}

func (o GetQuerySpecificationResultOutput) Filters() GetQuerySpecificationFilterArrayOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) []GetQuerySpecificationFilter { return v.Filters }).(GetQuerySpecificationFilterArrayOutput)
}

func (o GetQuerySpecificationResultOutput) Granularity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) *int { return v.Granularity }).(pulumi.IntPtrOutput)
}

func (o GetQuerySpecificationResultOutput) Havings() GetQuerySpecificationHavingArrayOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) []GetQuerySpecificationHaving { return v.Havings }).(GetQuerySpecificationHavingArrayOutput)
}

// ID of the query specification.
//
// Deprecated: The `id` attribute is deprecated and included for compatibility with the Terraform Plugin SDK. It will be removed in a future version.
func (o GetQuerySpecificationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) string { return v.Id }).(pulumi.StringOutput)
}

// JSON representation of the query according to the [Query Specification](https://docs.honeycomb.io/api/query-specification/#fields-on-a-query-specification), can be used as input for other resources.
func (o GetQuerySpecificationResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetQuerySpecificationResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetQuerySpecificationResultOutput) Orders() GetQuerySpecificationOrderArrayOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) []GetQuerySpecificationOrder { return v.Orders }).(GetQuerySpecificationOrderArrayOutput)
}

func (o GetQuerySpecificationResultOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

func (o GetQuerySpecificationResultOutput) TimeRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetQuerySpecificationResult) *int { return v.TimeRange }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQuerySpecificationResultOutput{})
}
