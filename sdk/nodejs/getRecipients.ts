// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Data Source: honeycomb.GetRecipients
 *
 * `honeycomb.GetRecipients` data source provides recipient IDs of recipients matching a set of criteria.
 *
 * ## Example Usage
 *
 * ### Get all recipients
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as honeycomb from "@pulumi/honeycomb";
 *
 * const all = honeycomb.GetRecipients({});
 * ```
 *
 * ### Get all email recipients matching a specific domain
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as honeycomb from "@pulumi/honeycomb";
 *
 * const example-dot-com = honeycomb.GetRecipients({
 *     detailFilter: {
 *         name: "address",
 *         valueRegex: ".*@example.com",
 *     },
 *     type: "email",
 * });
 * ```
 */
export function getRecipients(args?: GetRecipientsArgs, opts?: pulumi.InvokeOptions): Promise<GetRecipientsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("honeycomb:index/getRecipients:GetRecipients", {
        "detailFilter": args.detailFilter,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking GetRecipients.
 */
export interface GetRecipientsArgs {
    /**
     * a block to further filter recipients as described below. `name` must be set when providing a filter.
     */
    detailFilter?: inputs.GetRecipientsDetailFilter;
    /**
     * The type of recipient, allowed types are `email`, `pagerduty`, `msteams`, `slack` and `webhook`.
     */
    type?: string;
}

/**
 * A collection of values returned by GetRecipients.
 */
export interface GetRecipientsResult {
    readonly detailFilter?: outputs.GetRecipientsDetailFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of all the recipient IDs found.
     */
    readonly ids: string[];
    readonly type?: string;
}
/**
 * ## # Data Source: honeycomb.GetRecipients
 *
 * `honeycomb.GetRecipients` data source provides recipient IDs of recipients matching a set of criteria.
 *
 * ## Example Usage
 *
 * ### Get all recipients
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as honeycomb from "@pulumi/honeycomb";
 *
 * const all = honeycomb.GetRecipients({});
 * ```
 *
 * ### Get all email recipients matching a specific domain
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as honeycomb from "@pulumi/honeycomb";
 *
 * const example-dot-com = honeycomb.GetRecipients({
 *     detailFilter: {
 *         name: "address",
 *         valueRegex: ".*@example.com",
 *     },
 *     type: "email",
 * });
 * ```
 */
export function getRecipientsOutput(args?: GetRecipientsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecipientsResult> {
    return pulumi.output(args).apply((a: any) => getRecipients(a, opts))
}

/**
 * A collection of arguments for invoking GetRecipients.
 */
export interface GetRecipientsOutputArgs {
    /**
     * a block to further filter recipients as described below. `name` must be set when providing a filter.
     */
    detailFilter?: pulumi.Input<inputs.GetRecipientsDetailFilterArgs>;
    /**
     * The type of recipient, allowed types are `email`, `pagerduty`, `msteams`, `slack` and `webhook`.
     */
    type?: pulumi.Input<string>;
}
