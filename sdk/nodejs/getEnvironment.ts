// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Data Source: honeycomb.Environment
 *
 * The `honeycomb.Environment` data source retrieves the details of a single Environment.
 * If you want to retrieve multiple Environments, use the `honeycomb.GetEnvironments` data source instead.
 *
 * > **NOTE** This data source requires the provider be configured with a Management Key with `environments:read` in the configured scopes.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as honeycomb from "@pulumi/honeycomb";
 *
 * const prod = honeycomb.GetEnvironment({
 *     id: "hcaen_01j1d7t02zf7wgw7q89z3t60vf",
 * });
 * ```
 */
export function getEnvironment(args: GetEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("honeycomb:index/getEnvironment:GetEnvironment", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking GetEnvironment.
 */
export interface GetEnvironmentArgs {
    /**
     * The ID of the Environment
     */
    id: string;
}

/**
 * A collection of values returned by GetEnvironment.
 */
export interface GetEnvironmentResult {
    /**
     * the Environment's color.
     */
    readonly color: string;
    /**
     * the current state of the Environment's deletion protection status.
     */
    readonly deleteProtected: boolean;
    /**
     * the Environment's description.
     */
    readonly description: string;
    readonly id: string;
    /**
     * the Environment's name.
     */
    readonly name: string;
    /**
     * the Environment's slug.
     */
    readonly slug: string;
}
/**
 * ## # Data Source: honeycomb.Environment
 *
 * The `honeycomb.Environment` data source retrieves the details of a single Environment.
 * If you want to retrieve multiple Environments, use the `honeycomb.GetEnvironments` data source instead.
 *
 * > **NOTE** This data source requires the provider be configured with a Management Key with `environments:read` in the configured scopes.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as honeycomb from "@pulumi/honeycomb";
 *
 * const prod = honeycomb.GetEnvironment({
 *     id: "hcaen_01j1d7t02zf7wgw7q89z3t60vf",
 * });
 * ```
 */
export function getEnvironmentOutput(args: GetEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getEnvironment(a, opts))
}

/**
 * A collection of arguments for invoking GetEnvironment.
 */
export interface GetEnvironmentOutputArgs {
    /**
     * The ID of the Environment
     */
    id: pulumi.Input<string>;
}
