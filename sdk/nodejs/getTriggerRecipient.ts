// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Data Source: honeycomb.GetTriggerRecipient
 *
 * Search the triggers of a dataset for a trigger recipient. The ID of the existing trigger recipient can be used when adding trigger recipients to new triggers.
 *
 * > **Deprecated** Use the `honeycomb.GetRecipient` data source instead.
 */
export function getTriggerRecipient(args: GetTriggerRecipientArgs, opts?: pulumi.InvokeOptions): Promise<GetTriggerRecipientResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("honeycomb:index/getTriggerRecipient:GetTriggerRecipient", {
        "dataset": args.dataset,
        "target": args.target,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking GetTriggerRecipient.
 */
export interface GetTriggerRecipientArgs {
    /**
     * Search through all triggers linked to this dataset.
     */
    dataset: string;
    /**
     * Target of the trigger, this has another meaning depending on the type of recipient (see the table below).
     *
     * Type      | Target
     * ----------|-------------------------
     * email     | an email address
     * marker    | name of the marker
     * pagerduty | _N/A_
     * slack     | name of the channel
     * webhook   | name of the webhook
     */
    target?: string;
    /**
     * The type of recipient, allowed types are `email`, `marker`, `pagerduty`, `slack` and `webhook`.
     */
    type: string;
}

/**
 * A collection of values returned by GetTriggerRecipient.
 */
export interface GetTriggerRecipientResult {
    readonly dataset: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly target?: string;
    readonly type: string;
}
/**
 * ## # Data Source: honeycomb.GetTriggerRecipient
 *
 * Search the triggers of a dataset for a trigger recipient. The ID of the existing trigger recipient can be used when adding trigger recipients to new triggers.
 *
 * > **Deprecated** Use the `honeycomb.GetRecipient` data source instead.
 */
export function getTriggerRecipientOutput(args: GetTriggerRecipientOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTriggerRecipientResult> {
    return pulumi.output(args).apply((a: any) => getTriggerRecipient(a, opts))
}

/**
 * A collection of arguments for invoking GetTriggerRecipient.
 */
export interface GetTriggerRecipientOutputArgs {
    /**
     * Search through all triggers linked to this dataset.
     */
    dataset: pulumi.Input<string>;
    /**
     * Target of the trigger, this has another meaning depending on the type of recipient (see the table below).
     *
     * Type      | Target
     * ----------|-------------------------
     * email     | an email address
     * marker    | name of the marker
     * pagerduty | _N/A_
     * slack     | name of the channel
     * webhook   | name of the webhook
     */
    target?: pulumi.Input<string>;
    /**
     * The type of recipient, allowed types are `email`, `marker`, `pagerduty`, `slack` and `webhook`.
     */
    type: pulumi.Input<string>;
}
